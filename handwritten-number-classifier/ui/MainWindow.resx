<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exploreBut.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EASkV4aWYAAE1NACoAAAAIAAMBGgAF
        AAAAAQAAADIBGwAFAAAAAQAAADoBKAADAAAAAQACAAAAAAAAAEgAAAABAAAASAAAAAEAAP/iDFhJQ0Nf
        UFJPRklMRQABAQAADEhMaW5vAhAAAG1udHJSR0IgWFlaIAfOAAIACQAGADEAAGFjc3BNU0ZUAAAAAElF
        QyBzUkdCAAAAAAAAAAAAAAAAAAD21gABAAAAANMtSFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJr
        cHQAAAIEAAAAFHJYWVoAAAIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAAAAAFGRtbmQAAAJUAAAAcGRt
        ZGQAAALEAAAAiHZ1ZWQAAANMAAAAhnZpZXcAAAPUAAAAJGx1bWkAAAP4AAAAFG1lYXMAAAQMAAAAJHRl
        Y2gAAAQwAAAADHJUUkMAAAQ8AAAIDGdUUkMAAAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJp
        Z2h0IChjKSAxOTk4IEhld2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAAAAAAABJzUkdCIElFQzYx
        OTY2LTIuMQAAAAAAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZWiAAAAAAAAAAAAAA
        AAAAAAAAWFlaIAAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAA
        D4QAALbPZGVzYwAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6
        Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRl
        c2MAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAA
        AAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVD
        NjE5NjYtMi4xAAAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2
        LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdmlldwAAAAAAE6T+ABRfLgAQzxQAA+3MAAQTCwAD
        XJ4AAAABWFlaIAAAAAAATAlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAA
        AAJzaWcgAAAAAENSVCBjdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADcAOwBAAEUASgBP
        AFQAWQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDGAMsA0ADVANsA4ADl
        AOsA8AD2APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGp
        AbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2
        AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQT
        BCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXF
        BdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfS
        B+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9
        ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0N
        DSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/sEAkQJhBD
        EGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MTYxODE6QTxRPl
        FAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3
        GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7
        HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1
        IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtybo
        JxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizX
        LQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNG
        M38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2
        OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGs
        Qe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mp
        SfBKN0p9SsRLDEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIx
        UnxSx1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtF
        W5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTp
        ZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8e
        b3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnn
        ekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VH
        hauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/
        kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3S
        nkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sC
        q3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjR
        uUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dB
        x7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV
        1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN
        5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt
        9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23////bAEMACgcHBwgHCggICg8KCAoPEg0KCg0S
        FBAQEhAQFBQPEREREQ8UFBcYGhgXFB8fISEfHy0sLCwtMjIyMjIyMjIyMv/bAEMBCwoKCwwLDgwMDhIO
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//Z
</value>
  </data>
</root>